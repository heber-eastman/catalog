name: CI

on:
  pull_request:
    branches: [ main, develop, feature/** ]
  push:
    branches: [ feature/** ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: catalog_test
        ports:
          - '5432:5432'
        options: >-
          --health-cmd="pg_isready -U postgres" --health-interval=5s
          --health-timeout=5s --health-retries=20
    env:
      NODE_ENV: test
      DB_HOST: 127.0.0.1
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      TEST_DB_NAME: catalog_test
      DISABLE_EVENT_RECORDING: 'true'
      EMAIL_QUEUE_URL: http://localhost/disabled
      AWS_REGION: us-east-1
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      JWT_SECRET: test-secret-ci
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install backend deps
        run: npm ci
        working-directory: backend

      - name: Run backend tests
        run: npm test
        working-directory: backend

      - name: Install frontend deps
        run: npm ci
        working-directory: frontend

      - name: Run frontend tests
        run: npm run test
        working-directory: frontend
