{
  "name": "catalog-v0-monorepo",
  "version": "1.0.0",
  "description": "Golf Course Management Platform - Full-stack monorepo with backend and frontend",
  "private": true,
  "workspaces": [
    "backend",
    "frontend"
  ],
  "scripts": {
    "dev": "./dev-start.sh",
    "start": "npm run dev:backend",
    "install:all": "npm install",
    "dev:backend": "npm run dev --workspace=backend",
    "dev:frontend": "npm run dev --workspace=frontend",
    "build:backend": "npm run build --workspace=backend",
    "build:frontend": "npm run build --workspace=frontend",
    "lint": "eslint . --ext .js,.ts,.vue --max-warnings 0",
    "lint:fix": "eslint . --ext .js,.ts,.vue --fix",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "test": "npm run test --workspace=backend && npm run test --workspace=frontend",
    "test:e2e": "npm run test:e2e --workspace=frontend",
    "test:e2e:open": "npm run test:e2e:open --workspace=frontend",
    "test:e2e:staging": "CYPRESS_BASE_URL=https://staging.catalog.golf npm run test:e2e --workspace=frontend",
    "test:smoke": "npm run test:smoke --workspace=backend",
    "test:smoke:staging": "SMOKE_TEST_URL=https://staging.catalog.golf npm run test:smoke --workspace=backend",
    "test:smoke:prod": "SMOKE_TEST_URL=https://catalog.golf npm run test:smoke --workspace=backend",
    "docker:build": "docker-compose build",
    "docker:build:prod": "docker build -t catalog-golf-backend ./backend && docker build -t catalog-golf-frontend ./frontend",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "docker:clean": "docker-compose down -v && docker system prune -f",
    "docker:push": "npm run docker:push:backend && npm run docker:push:frontend",
    "docker:push:backend": "aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $AWS_ECR_REGISTRY && docker tag catalog-golf-backend:latest $AWS_ECR_REGISTRY/catalog-golf-backend:latest && docker push $AWS_ECR_REGISTRY/catalog-golf-backend:latest",
    "docker:push:frontend": "aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $AWS_ECR_REGISTRY && docker tag catalog-golf-frontend:latest $AWS_ECR_REGISTRY/catalog-golf-frontend:latest && docker push $AWS_ECR_REGISTRY/catalog-golf-frontend:latest",
    "db:migrate": "npm run db:migrate --workspace=backend",
    "db:migrate:prod": "NODE_ENV=production npm run db:migrate --workspace=backend",
    "db:seed": "npm run db:seed --workspace=backend",
    "db:reset": "npm run db:reset --workspace=backend",
    "aws:setup": "./deploy-aws-setup.sh",
    "deploy:staging": "npm run deploy:staging:backend && npm run deploy:staging:frontend",
    "deploy:staging:backend": "aws ecs update-service --cluster catalog-golf-staging --service catalog-golf-backend-staging --force-new-deployment",
    "deploy:staging:frontend": "aws ecs update-service --cluster catalog-golf-staging --service catalog-golf-frontend-staging --force-new-deployment",
    "deploy:production": "npm run deploy:prod:backend && npm run deploy:prod:frontend",
    "deploy:prod:backend": "aws ecs update-service --cluster catalog-golf --service catalog-golf-backend --force-new-deployment",
    "deploy:prod:frontend": "aws ecs update-service --cluster catalog-golf --service catalog-golf-frontend --force-new-deployment",
    "deploy:wait:staging": "aws ecs wait services-stable --cluster catalog-golf-staging --services catalog-golf-backend-staging catalog-golf-frontend-staging",
    "deploy:wait:production": "aws ecs wait services-stable --cluster catalog-golf --services catalog-golf-backend catalog-golf-frontend",
    "health:check": "curl -f http://localhost:3000/health && curl -f http://localhost:8080/health",
    "health:check:staging": "curl -f https://staging.catalog.golf/health && curl -f https://staging.catalog.golf/api/v1/health",
    "health:check:prod": "curl -f https://catalog.golf/health && curl -f https://catalog.golf/api/v1/health",
    "logs:staging": "aws logs tail /ecs/catalog-golf-staging --follow",
    "logs:production": "aws logs tail /ecs/catalog-golf --follow",
    "backup:db": "npm run backup:db --workspace=backend",
    "restore:db": "npm run restore:db --workspace=backend",
    "security:audit": "npm audit --audit-level moderate && npm run security:audit --workspace=backend && npm run security:audit --workspace=frontend",
    "performance:test": "npm run performance:test --workspace=frontend",
    "full:deploy": "npm run lint && npm run test && npm run docker:build:prod && npm run docker:push && npm run deploy:production && npm run deploy:wait:production && npm run test:smoke:prod",
    "quick:deploy": "npm run docker:build:prod && npm run docker:push && npm run deploy:production"
  },
  "devDependencies": {
    "eslint": "^8.45.0",
    "eslint-config-prettier": "^8.8.0",
    "eslint-plugin-prettier": "^5.0.0",
    "eslint-plugin-vue": "^9.15.0",
    "prettier": "^3.0.0",
    "jest": "^29.6.0",
    "cypress": "^13.0.0",
    "axe-core": "^4.7.0",
    "cypress-axe": "^1.5.0"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "keywords": [
    "golf-course",
    "management",
    "vue",
    "express",
    "postgresql",
    "aws",
    "docker",
    "monorepo"
  ],
  "author": "Catalog Golf Team",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/your-org/catalog-golf.git"
  },
  "bugs": {
    "url": "https://github.com/your-org/catalog-golf/issues"
  },
  "homepage": "https://catalog.golf"
}
